/*
 * Declares common fields and tasks.
 */
apply plugin: 'java'

sourceCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs = ['src']
            exclude 'resources/'
        }
        resources {
            srcDirs = ['src']
            exclude '**/*.java'
       }
    }
    test {
        java {
            srcDirs = ['test']
        }
        resources {
            srcDirs = ['test']
            exclude '**/*.java'
        }
    }
}

repositories {
    jcenter()
}

configurations {
    compileAndResource {
        description 'will be compiled, and included in all built jars'
        transitive = true
    }
    
    compile {
        description 'compile classpath'
        transitive = true
        extendsFrom compileAndResource
    }
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compileAndResource.collect {
        it.isDirectory() ? it : zipTree(it).matching {
            exclude { it.path.contains('META-INF') }
        }
    }}
    duplicatesStrategy = 'exclude'
    with jar
}

test {
    filter {
        includeTestsMatching "*Suite*"
    }
}

task testOperational (type: Test) {
    filter {
        includeTestsMatching "*Operational*"
    }
}

ext.getDate = {
    new Date().format('yyyy_MM_dd')
}

ext.getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

